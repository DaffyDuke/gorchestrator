<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../favicon.ico">
    <style type="text/css" media="all">
        .map svg {
            height: auto;
            width: 650px;
        }
        .map g {
            fill: #ccc;
            stroke: #333;
            stroke-width: 1;
        }
	.blink {
		animation: blink 1s steps(5, start) infinite;
		-webkit-animation: blink 1s steps(5, start) infinite;
	}
	@keyframes blink {
		to {
			visibility: hidden;
		}
	}
	@-webkit-keyframes blink {
		to {
			visibility: hidden;
		}
	}
    </style>

    <title>Graph result for tosca template</title>

    <!-- Bootstrap core CSS -->
    <link href="/bootstrap/3.3.4/css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="/normalize.css" rel="stylesheet">

    <!-- Just for debugging purposes. Don't actually copy these 2 lines! -->
    <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->
    <!--<script src="../../assets/js/ie-emulation-modes-warning.js"></script>-->

    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
  </head>

  <body>

    <div class="row">
        <div class="container-fluid">
            <ul class="nav nav-tabs">
                <li><a data-toggle="tab" href="#controlMenu">Control Menu</a></li>
                <li><a data-toggle="tab" href="#executionGraph">The execution Graph</a></li>
            </ul>
        </div>
    </div>
        <!--
    <div class="row">
        <div class="col-sm-1">
            <div class="form-group">
                <br/>
            </div>
                <form role="form" action="null">
            <div class="form-group">
                <input type="login" class="form-control" id="email" placeholder="Login">
            </div>
            <div class="form-group">
                <input type="password" class="form-control" id="pwd" placeholder="Password">
            </div>
                <button type="submit" class="btn btn-default">Run the file</button>
            </form>
  <br/>
    </div>
    -->
    <!--
  <div class="col-sm-11">
  <div class="tab-content">
    <div id="toscaSource" class="tab-pane fade">
        <div class="embed-responsive embed-responsive-16by9">
        <table data-toggle="table" data-url="/getstate.json" data-cache="false" data-height="299">
            <thead>
                <tr>
                    <th data-field="id">Item ID</th>
                    <th data-field="name">Item Name</th>
                    <th data-field="price">Item Price</th>
                </tr>
            </thead>
        </table>
        </div> 
    </div>
        -->
    <div class="row">
        <div id="controlMenu" class="tab-pane active">
            <form role="form" action="/view/" method="GET" onsubmit="this.action = this.action + this.id.value">
                <span class="btn btn-default btn-file">
                    <input type="text" class="form-control" id="id" placeholder="id"/>
                    <!--<input type="file" name="gorch">-->
                </span>
                <button type="submit" class="btn btn-default">View!</button>
            </form>
            <form role="form" action="/upload" method="POST" enctype="multipart/form-data">
                <span class="btn btn-default btn-file">
                    <input type="file" name="input">
                    <input type="hidden" name="type" value="tosca">
                </span>
                <button type="submit" class="btn btn-default">Upload TOSCA file</button>
            </form>
            <form role="form" action="/upload" method="POST" enctype="multipart/form-data">
                <span class="btn btn-default btn-file">
                    <input type="file" name="input">
                    <input type="hidden" name="type" value="gorch">
                </span>
                <button type="submit" class="btn btn-default">Upload Gorch json file</button>
            </form>
        </div>
        <div id="executionGraph" class="tab-pane">
            <div class="embed-responsive embed-responsive-16by9">
                <object class="embed-responsive-item" data="/graph/{{.ID}}.svg" type="image/svg+xml" id="graphSVG">Please provide an ID</object>
            </div>
            <!-- <img class="img-responsive" id="toscaSVG" src="/tosca.svg" alt="SVG Representation of the tosca file"> -->
        </div>
    </div>


    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="/jquery.min.js"></script>
    <script src="/bootstrap/3.3.4/js/bootstrap.min.js"></script>
    <!-- update the color -->
    <script type="text/javascript">
        function updateGraph(svgRoot) {
            $.getJSON( "{{.Update}}", function() {
                //console.log( "success!" );
                }).done(function(data) {
                    for (var i in data.nodes){
                        //console.log(data.nodes[i].state);
                        switch (data.nodes[i].state) {
                            case 0:
                                color = 'rgba(34, 209, 23, 0.7)'
                                break;
                            case 1:
                                color = 'rgba(10, 0, 0, 0.7)'
                                break;
                            case 2:
                                color = 'rgba(73, 151, 41, 0.7)'
                                break;
                            case 3:
                                color = 'rgba(34, 131, 201, 0.7)'
                                break;
                            default:
                                color = 'rgba(230, 0, 0, 0.7)'
                        }
                        $("#" + data.nodes[i].id,svgRoot).children("text").css({'fill': color});
                        //$("#" + data[i].id,svgRoot).children("polygon").css({'fill': color});
                    }
                });
                    setTimeout(function() {
                            updateGraph(svgRoot);
                    }, 2000)
        }
        $(document).ready(function(){
            var a = document.getElementById("graphSVG");

            // Some help from http://stackoverflow.com/questions/6793312/how-to-use-jquery-in-svg-scalable-vector-graphics
            //it's important to add an load event listener to the object, as it will load the svg doc asynchronously
            a.addEventListener("load",function(){
                var svgDoc = a.contentDocument; //get the inner DOM of alpha.svg
                var svgRoot  = svgDoc.documentElement;
                updateGraph(svgRoot);
                //now we can query stuff with jquery like this
                //note that we pass in the svgRoot as the context node!
            },false);
        })
    </script>
    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->    <!--<script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>-->
  </body>
</html>
